#include <stdio.h>
 
// Returns true if there is a subset of set[] with sun equal to given sum
int isSubsetSum(int set[], int n, int sum)
{
   // Base Cases
   if (sum == 0)
     return 1;
   if (n == 0 && sum != 0)
     return 0;
 
   // If last element is greater than sum, then ignore it
   if (set[n-1] > sum)
     return isSubsetSum(set, n-1, sum);
 
   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(set, n-1, sum) || isSubsetSum(set, n-1, sum-set[n-1]);
}
int main(int argc, char const *argv[])
{
  int n,m,t,a[1000],j,i;
  scanf("%d",&t);
  for (i = 0; i < t; ++i)
  {
    /* code */
    scanf("%d %d",&n,&m);
    for(j=0;j<n;j++)
    {
      scanf("%d",&a[j]);
    }
    if (isSubsetSum(a, n, m) == 1)
      printf("Yes\n");
    else
      printf("No\n");
  }
  return 0;
}
 
